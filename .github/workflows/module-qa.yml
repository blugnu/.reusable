name: ModuleQuality
on:
  workflow_call:
    outputs:
      moduleName:
        value: ${{ jobs.module-info.outputs.moduleName }}
      version:
        value: ${{ jobs.module-info.outputs.version }}
      goVersion:
        value: ${{ jobs.module-info.outputs.goVersion }}
      serviceName:
        value: ${{ jobs.module-info.outputs.serviceName }}
      ingressPath:
        value: ${{ jobs.module-info.outputs.ingressPath }}

jobs:
  module-info:
    uses: ./.github/workflows/module-info.yml

  repo-visibility:
    runs-on: ubuntu-latest
    outputs:
      isPublic: ${{ steps.visibility.outputs.is_public }}
    steps:
      - uses: credfeto/action-repo-visibility@v1.2.0
        id: visibility

  qa:
    if: ${{ (github.ref != 'refs/heads/master' ) || (needs.repo-visibility.outputs.isPublic =='true') }}
    needs:
      - module-info
      - repo-visibility
    outputs:
      gitVersion: ${{ needs.module-info.outputs.gitVersion }}
      isPublic: ${{ needs.repo-visibility.outputs.isPublic }}
      moduleName: ${{ needs.module-info.outputs.moduleName }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: 'setup: go ${{ needs.module-info.outputs.goVersion }}'
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.module-info.outputs.goVersion }}
        
      - name: 'go: lint'
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: 'go: test'
        run: go mod download && go test -v -coverprofile=profile.cov ./...

      - name: 'upload: profile.cov'
        uses: actions/upload-artifact@v3
        with:
          name: coverprofile
          path: profile.cov

  coveralls:
    if: ${{ (github.ref != 'refs/heads/master') && (needs.qa.outputs.isPublic =='true') }}
    needs:
      - qa
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: 'download: profile.cov'
      uses: actions/download-artifact@v3
      with:
        name: coverprofile

    - name: 'coveralls: send coverage'
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov

  sonarcloud:
    if: ${{ needs.qa.outputs.isPublic =='true' }}
    needs:
      - qa
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: 'download: profile.cov'
      uses: actions/download-artifact@v3
      with:
        name: coverprofile

    - name: 'sonarcloud: sonar-project.properties'
      run: |
        # remove the github.com/ prefix from the module name, replace
        # '/' with ':' and convert to lowercase to derive a project
        # key for SonarCloud
        moduleName="${{ needs.qa.outputs.moduleName }}"
        key=$(echo ${moduleName#*github.com/})
        key=$(echo $key | tr '/' ':' | tr '[:upper:]' '[:lower:]')

        cat << EOF >> sonar-project.properties
        sonar.organization=blugnu
        sonar.projectKey=$key
        sonar.projectName=${{ needs.qa.outputs.moduleName }}
        sonar.projectVersion=${{ needs.qa.outputs.gitVersion }}

        sonar.go.coverage.reportPaths=profile.cov

        sonar.language=go
        sonar.sources=.
        sonar.exclusions=**/*_test.go,**/vendor/**,.*/**

        sonar.tests=.
        sonar.test.inclusions=**/*_test.go
        sonar.test.exclusions=**/vendor/**,.*/**
        EOF

        cat sonar-project.properties

    - name: 'sonarcloud: scan'
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}