name: BuildService

on:
  workflow_call:
    outputs:
      moduleName:
        value: ${{ jobs.qa.outputs.moduleName }}
      ingressPath:
        value: ${{ jobs.qa.outputs.ingressPath }}
      serviceName:
        value: ${{ jobs.qa.outputs.serviceName }}
      gitVersion:
        value: ${{ jobs.qa.outputs.gitVersion }}
      goVersion:
        value: ${{ jobs.qa.outputs.goVersion }}

jobs:
  qa:
    uses: ./.github/workflows/module-qa.yml
    secrets: inherit
  
  build:
    name: 'build ${{ needs.qa.outputs.gitVersion }}'
    runs-on: ubuntu-latest
    needs:
    - qa
    outputs:
      gitVersion: ${{ needs.qa.outputs.gitVersion }}
      serviceName: ${{ needs.qa.outputs.serviceName }}
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: 'setup: docker buildx'
      uses: docker/setup-buildx-action@v2

    - name: 'docker: login'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 'docker: extract metadata'
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ needs.qa.outputs.serviceName }}

    - name: 'docker: build'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: .cicd/dockerfile
        provenance: false # not currently supported by ghcr.io
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ needs.qa.outputs.serviceName }}:${{ needs.qa.outputs.gitVersion }}
        labels: ${{ steps.meta.outputs.labels }}

  cleanup:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
    - build
    steps:
    - name: 'ghcr: prune'
      uses: vlaurin/action-ghcr-prune@v0.5.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        organization: ${{ github.repository_owner }}
        container: ${{ needs.build.outputs.serviceName }}
        prune-untagged: true
        keep-tags-regexes:
          ^${{ needs.build.outputs.gitVersion }}$
        prune-tags-regexes:
          ^${{ needs.build.outputs.gitVersion }}-.*$
        # keep-tags-regexes:
        #   ^[0-9]+.[0-9]+.[0-9]+$
        # prune-tags-regexes:
        #   ^[0-9]+.[0-9]+.[0-9]+-.*$
